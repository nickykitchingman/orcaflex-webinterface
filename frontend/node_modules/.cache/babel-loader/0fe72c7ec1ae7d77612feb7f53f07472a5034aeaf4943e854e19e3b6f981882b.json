{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Apps\\\\OrcaFlex\\\\project\\\\orcaflex\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSubmission = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const allowedExtensions = [\".dat\", \".sim\", \".yml\"];\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    const fileName = event.target.files[0].name;\n    const extension = fileName.substr(fileName.lastIndexOf(\".\"));\n    if (allowedExtensions.includes(extension)) {\n      setFile(selectedFile);\n      setFileName(fileName);\n    } else {\n      alert(\"Invalid file type. Please select a .dat, .sim, or .yml file.\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const files = e.target.elements['file'].files;\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n    try {\n      setMessage('Uploading...');\n      const response = await fetch('http://localhost:5000/files', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '500px',\n      margin: '0 auto',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File submission portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        onChange: handleFileChange,\n        accept: \".dat,.yml,.sim\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FileSubmission, \"hqlKq2wBxs8RQ4nsfAp115c3Z/k=\");\n_c = FileSubmission;\nexport default FileSubmission;\nvar _c;\n$RefreshReg$(_c, \"FileSubmission\");","map":{"version":3,"names":["React","useState","FileSubmission","message","setMessage","file","setFile","fileName","setFileName","allowedExtensions","handleFileChange","event","selectedFile","target","files","name","extension","substr","lastIndexOf","includes","alert","handleSubmit","e","preventDefault","elements","formData","FormData","i","length","append","response","fetch","method","body","data","json","error","width","margin","textAlign"],"sources":["D:/Web Apps/OrcaFlex/project/orcaflex/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileSubmission = () => {\n  const [message, setMessage] = useState('');\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  \n  const allowedExtensions = [\".dat\", \".sim\", \".yml\"];\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    const fileName = event.target.files[0].name;\n    const extension = fileName.substr(fileName.lastIndexOf(\".\"));\n    if (allowedExtensions.includes(extension)) {\n      setFile(selectedFile);\n      setFileName(fileName);\n    } else {\n      alert(\"Invalid file type. Please select a .dat, .sim, or .yml file.\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const files = e.target.elements['file'].files;\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n    try {\n      setMessage('Uploading...')\n      const response = await fetch('http://localhost:5000/files', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div style={{ width: '500px', margin: '0 auto', textAlign: 'center' }}>\n      <h1>File submission portal</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" id=\"file\" name=\"file\" onChange={handleFileChange} accept=\".dat,.yml,.sim\" multiple />\n        <input type=\"submit\" value=\"Upload\" />\n      </form>\n      <div id=\"message\">{message}</div>\n    </div>\n  );\n};\n\nexport default FileSubmission;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,iBAAiB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EAElD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAMP,QAAQ,GAAGI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;IAC3C,MAAMC,SAAS,GAAGT,QAAQ,CAACU,MAAM,CAACV,QAAQ,CAACW,WAAW,CAAC,GAAG,CAAC,CAAC;IAC5D,IAAIT,iBAAiB,CAACU,QAAQ,CAACH,SAAS,CAAC,EAAE;MACzCV,OAAO,CAACM,YAAY,CAAC;MACrBJ,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLa,KAAK,CAAC,8DAA8D,CAAC;IACvE;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMT,KAAK,GAAGQ,CAAC,CAACT,MAAM,CAACW,QAAQ,CAAC,MAAM,CAAC,CAACV,KAAK;IAC7C,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,KAAK,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCF,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAEf,KAAK,CAACa,CAAC,CAAC,CAAC;IACpC;IACA,IAAI;MACFvB,UAAU,CAAC,cAAc,CAAC;MAC1B,MAAM0B,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC/B,UAAU,CAAC8B,IAAI,CAAC/B,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdhC,UAAU,CAAC,sCAAsC,CAAC;IACpD;EACF,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEiC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAA,wBACpE;MAAA,UAAI;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAM,QAAQ,EAAElB,YAAa;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEX,gBAAiB;QAAC,MAAM,EAAC,gBAAgB;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG,eACxG;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,eACP;MAAK,EAAE,EAAC,SAAS;MAAA,UAAEP;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV,CAAC;AAAC,GAjDID,cAAc;AAAA,KAAdA,cAAc;AAmDpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}